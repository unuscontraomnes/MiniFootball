@using System.Globalization
@using UnidecodeSharpFork
@model MiniFootball.ViewModels.ResultsViewModel

@{
    ViewBag.Title = "Game Statistics";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
	var date = Model.Results.Select(s => s.Date).FirstOrDefault().ToString("d MMMM yyyy, dddd", CultureInfo.CreateSpecificCulture("ru-RU"));
}

<div class="container-fluid">
	<div class="row">
		<div class="col-md-12">
			<div class="page-header">
				<h1>
					Game Statistics<br />
				</h1>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-md-12">
			<h3>
				@Html.DisplayFor(d => date)
			</h3>
		</div>
	</div>

	<div class="row">
		<div class="col-md-12">
			<table class="table">
				<thead>
					<tr>
						<th>
							Player
						</th>
						<th>
							Points
						</th>
					</tr>
				</thead>
				<tbody>
				@for (var i = 0; i < Model.Results.Count; i++)
				{
					var players = Model.Results.ElementAt(i).Team.TeamPlayers.Select(tp => tp.Player).ToList();
					<tr><th class="team" colspan="3">Team @players.FirstOrDefault().LastName.Unidecode()</th></tr>
					foreach (var item in players)
					{
						<tr>
							<td>
								@Html.DisplayFor(modelItem => item.Name) @Html.DisplayFor(modelItem => item.LastName)
							</td>
							<td>
								@Html.DisplayFor(modelItem => Model.Results.ElementAt(i).Points)
							</td>
						</tr>
					}
				}
				</tbody>
			</table>
		</div>
	</div>
</div>